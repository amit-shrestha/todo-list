{"version":3,"sources":["components/Input.js","components/Tool.js","components/TodoList.js","components/Button.js","components/Search.js","components/TodoListWrapper.js","Constants/Filter.js","components/App.js","serviceWorker.js","index.js"],"names":["Input","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","props","edit","setState","editTodo","target","value","newTodo","handleSubmit","preventDefault","onEdit","index","state","onAdd","_this2","react_default","a","createElement","onSubmit","className","type","placeholder","onChange","React","Component","Tool","onClick","TodoList","todoList","option","completeTodo","deleteTodo","updateTodo","searchParameter","getList","filter","todo","isCompleted","includes","length","map","item","key","isEditing","components_Input","components_Tool","Button","onButtonClick","activeOption","Search","TodoListWrapper","addTodo","components_Button","components_Search","components_TodoList","ALL","App","task","isTaskValid","todos","concat","toConsumableArray","currentTodo","itemIndex","objectSpread","changeOption","tasksToDelete","enableEdit","some","letter","search","Filter","storedTodos","window","localStorage","getItem","storedTodosArray","JSON","parse","setItem","stringify","components_TodoListWrapper","Boolean","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3f733a7a.chunk.js","sourcesContent":["import React from 'react';\nimport Proptypes from 'prop-types';\n\n/**\n *\n *\n * @class Input\n * @extends {React.Component}\n */\nclass Input extends React.Component {\n  /**\n   *\n   * @memberof Input\n   */\n  constructor() {\n    super();\n    this.state = {\n      editTodo: '',\n      newTodo: ''\n    };\n  }\n\n  /**\n   *\n   *\n   * @memberof Input\n   * @param {*} event\n   */\n  handleChange = event => {\n    this.props.edit\n      ? this.setState({ editTodo: event.target.value })\n      : this.setState({ newTodo: event.target.value });\n  };\n\n  /**\n   *\n   *\n   * @memberof Input\n   * @param {*} event\n   */\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.edit\n      ? this.props.onEdit(this.props.index, this.state.editTodo)\n      : this.props.onAdd(this.state.newTodo);\n    this.setState({ newTodo: '', editTodo: '' });\n  };\n\n  /**\n   *\n   *\n   * @memberof Input\n   */\n  componentDidMount() {\n    this.setState({ editTodo: this.props.value });\n  }\n  /**\n   *\n   *\n   * @returns\n   * @memberof Input\n   */\n  render() {\n    return this.props.edit ? (\n      <form onSubmit={event => this.handleSubmit(event)} className=\"edit-form\">\n        <input\n          type=\"text\"\n          placeholder=\"\"\n          value={this.state.editTodo}\n          onChange={event => this.handleChange(event)}\n        />\n        <button>Save</button>\n      </form>\n    ) : (\n      <form onSubmit={event => this.handleSubmit(event)} className=\"input-form\">\n        <input\n          type=\"text\"\n          placeholder=\"Add new task\"\n          value={this.state.newTodo}\n          onChange={event => this.handleChange(event)}\n        />\n        <button>Add</button>\n      </form>\n    );\n  }\n}\n\nInput.propTypes = {\n  edit: Proptypes.bool,\n  onEdit: Proptypes.func,\n  index: Proptypes.number,\n  value: Proptypes.string,\n  onAdd: Proptypes.func\n};\n\nexport default Input;\n","import React from 'react';\nimport Proptypes from 'prop-types';\n/**\n *\n * @param {*} props\n */\nconst Tool = props => {\n  const { value, onClick } = props;\n\n  /**\n   *\n   */\n  const handleClick = () => onClick();\n\n  return (\n    <button className={value} onClick={handleClick}>\n      {value}\n    </button>\n  );\n};\n\nTool.propTypes = {\n  value: Proptypes.string,\n  onClick: Proptypes.func\n};\n\nexport default Tool;\n","import React from 'react';\nimport Proptypes from 'prop-types';\n\nimport Tool from './Tool';\nimport Input from './Input';\n\n/**\n *\n * @param {*} props\n */\nconst TodoList = props => {\n  const {\n    todoList,\n    option,\n    completeTodo,\n    deleteTodo,\n    onEdit,\n    updateTodo,\n    searchParameter\n  } = props;\n\n  /**\n   *\n   */\n  const getList = () => {\n    if (option === 'Remaining') {\n      return todoList.filter(\n        todo => !todo.isCompleted && todo.todo.includes(searchParameter)\n      );\n    } else if (option === 'Completed') {\n      return todoList.filter(\n        todo => todo.isCompleted && todo.todo.includes(searchParameter)\n      );\n    } else {\n      return todoList.filter(todo => todo.todo.includes(searchParameter));\n    }\n  };\n\n  return getList().length !== 0 ? (\n    <ul>\n      {getList().map((item, index) => (\n        <li className=\"clearfix\" key={index}>\n          {item.isEditing ? (\n            <Input\n              onEdit={updateTodo}\n              edit={true}\n              index={index}\n              value={item.todo}\n            />\n          ) : (\n            <div>\n              <div\n                className={\n                  item.isCompleted ? 'task-list complete' : 'task-list'\n                }\n                onClick={() => completeTodo(index)}\n              >\n                {item.todo}\n              </div>\n              <div className=\"menu\">\n                <Tool value=\"Edit\" onClick={() => onEdit(index)} />\n                <Tool value=\"Delete\" onClick={() => deleteTodo(index)} />\n              </div>\n            </div>\n          )}\n        </li>\n      ))}\n    </ul>\n  ) : (\n    <div className=\"no-results\">No Results Found</div>\n  );\n};\n\nTodoList.propTypes = {\n  todoList: Proptypes.array,\n  option: Proptypes.string,\n  completeTodo: Proptypes.func,\n  deleteTodo: Proptypes.func,\n  onEdit: Proptypes.func,\n  updateTodo: Proptypes.func,\n  searchParameter: Proptypes.string\n};\n\nexport default TodoList;\n","import React from 'react';\nimport Proptypes from 'prop-types';\n\n/**\n *\n * @param {*} props\n */\nconst Button = props => {\n  const { onButtonClick, value, activeOption } = props;\n\n  /**\n   *\n   */\n  const handleClick = () => onButtonClick(value);\n\n  return (\n    <button\n      className={activeOption === value ? 'active' : value}\n      onClick={handleClick}\n    >\n      {value}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  onButtonClick: Proptypes.func,\n  value: Proptypes.string,\n  activeOption: Proptypes.string\n};\n\nexport default Button;\n","import React from 'react';\nimport Proptypes from 'prop-types';\n\n/**\n *\n * @param {*} props\n */\nconst Search = props => {\n  const { onChange } = props;\n\n  /**\n   *\n   * @param {*} event\n   */\n  const handleSubmit = event => {\n    event.preventDefault();\n  };\n\n  /**\n   *\n   * @param {*} event\n   */\n  const handleChange = event => {\n    onChange(event.target.value);\n  };\n\n  return (\n    <form onSubmit={event => handleSubmit(event)} className=\"search-form\">\n      <input\n        type=\"text\"\n        placeholder=\"Search\"\n        onChange={event => handleChange(event)}\n      />\n    </form>\n  );\n};\n\nSearch.propTypes = {\n  onChange: Proptypes.func\n};\n\nexport default Search;\n","import React from 'react';\nimport Proptypes from 'prop-types';\n\nimport Input from './Input';\nimport TodoList from './TodoList';\nimport Button from './Button';\nimport Search from './Search';\n\n/**\n *\n * @param {*} props\n */\nconst TodoListWrapper = props => {\n  const {\n    onButtonClick,\n    activeOption,\n    addTodo,\n    edit,\n    todoList,\n    completeTodo,\n    option,\n    deleteTodo,\n    onEdit,\n    updateTodo,\n    onChange,\n    searchParameter\n  } = props;\n\n  return (\n    <div className=\"container\">\n      <h1>TO-DO LIST</h1>\n      <Button\n        value=\"All\"\n        onButtonClick={onButtonClick}\n        activeOption={activeOption}\n      />\n      <Button\n        value=\"Remaining\"\n        onButtonClick={onButtonClick}\n        activeOption={activeOption}\n      />\n      <Button\n        value=\"Completed\"\n        onButtonClick={onButtonClick}\n        activeOption={activeOption}\n      />\n      <Input onAdd={addTodo} edit={edit} />\n      <Search onChange={onChange} />\n      <TodoList\n        todoList={todoList}\n        completeTodo={completeTodo}\n        option={option}\n        deleteTodo={deleteTodo}\n        onEdit={onEdit}\n        updateTodo={updateTodo}\n        searchParameter={searchParameter}\n      />\n    </div>\n  );\n};\n\nTodoListWrapper.propTypes = {\n  onButtonClick: Proptypes.func,\n  activeOption: Proptypes.string,\n  addTodo: Proptypes.func,\n  edit: Proptypes.bool,\n  todoList: Proptypes.array,\n  completeTodo: Proptypes.func,\n  option: Proptypes.string,\n  deleteTodo: Proptypes.func,\n  onEdit: Proptypes.func,\n  updateTodo: Proptypes.func,\n  onChange: Proptypes.func,\n  searchParameter: Proptypes.string\n};\n\nexport default TodoListWrapper;\n","export const ALL = 'All';\n","import React from 'react';\n\nimport '../assets/css';\nimport TodoListWrapper from './TodoListWrapper';\nimport * as Filter from '../Constants/Filter';\n/**\n *\n *\n * @class App\n * @augments {React.Component}\n *\n */\nclass App extends React.Component {\n  /**\n   * @memberof App\n   */\n  constructor() {\n    super();\n    this.state = {\n      todos: [],\n      searchParameter: '',\n      option: Filter.ALL\n    };\n  }\n\n  /**\n   * @memberof Input\n   * @param {string} task\n   */\n  addTodo = task => {\n    if (this.isTaskValid(task)) {\n      this.setState({\n        todos: [\n          {\n            todo: task,\n            isCompleted: false,\n            isEditing: false\n          },\n          ...this.state.todos\n        ]\n      });\n    }\n  };\n\n  /**\n   * @memberof Input\n   * @param {number} index\n   */\n  completeTodo = index => {\n    const todos = this.state.todos.map((currentTodo, itemIndex) => {\n      if (itemIndex !== index) {\n        return currentTodo;\n      }\n\n      return {\n        ...currentTodo,\n        isCompleted: !currentTodo.isCompleted\n      };\n    });\n\n    this.setState({ todos });\n  };\n\n  /**\n   * @memberof Input\n   * @param {string} option\n   */\n  changeOption = option => {\n    this.setState({ option: option });\n  };\n\n  /**\n   * @memberof Input\n   * @param {number} index\n   */\n  deleteTodo = index => {\n    const tasksToDelete = this.state.todos.filter(\n      (item, itemIndex) => itemIndex !== index\n    );\n\n    this.setState({ todos: tasksToDelete });\n  };\n\n  /**\n   * @memberof Input\n   * @param {number} index\n   */\n  enableEdit = index => {\n    const todos = this.state.todos.map((currentTodo, itemIndex) => {\n      if (itemIndex !== index) {\n        return currentTodo;\n      }\n\n      return {\n        ...currentTodo,\n        isEditing: !currentTodo.isEditing\n      };\n    });\n\n    this.setState({ todos });\n  };\n  /**\n   * @memberof Input\n   * @param {number} index\n   * @param {string} task\n   */\n  updateTodo = (index, task) => {\n    if (this.isTaskValid(task)) {\n      const todos = this.state.todos.map((currentTodo, itemIndex) => {\n        if (itemIndex !== index) {\n          return currentTodo;\n        }\n\n        return {\n          ...currentTodo,\n          isEditing: !currentTodo.isEditing,\n          todo: task\n        };\n      });\n\n      this.setState({ todos });\n    }\n  };\n\n  /**\n   * @memberof Input\n   * @param {string} task\n   */\n  isTaskValid = task => {\n    if (task && task !== null && [...task].some(letter => letter !== ' ')) {\n      return true;\n    }\n\n    return false;\n  };\n\n  /**\n   * @memberof Input\n   * @param {string} value\n   */\n  search = value => {\n    this.setState({ searchParameter: value });\n  };\n\n  /**\n   *\n   *\n   * @memberof App\n   */\n  componentDidMount() {\n    const storedTodos = window.localStorage.getItem('storeTodos');\n    const storedTodosArray = storedTodos ? JSON.parse(storedTodos) : [];\n\n    this.setState({ todos: storedTodosArray });\n  }\n\n  /**\n   *\n   *\n   * @memberof App\n   */\n  componentDidUpdate() {\n    window.localStorage.setItem('storeTodos', JSON.stringify(this.state.todos));\n  }\n\n  /**\n   *\n   *\n   * @returns\n   * @memberof App\n   */\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <TodoListWrapper\n          onButtonClick={this.changeOption}\n          activeOption={this.state.option}\n          addTodo={this.addTodo}\n          edit={false}\n          todoList={this.state.todos}\n          completeTodo={this.completeTodo}\n          option={this.state.option}\n          deleteTodo={this.deleteTodo}\n          onEdit={this.enableEdit}\n          updateTodo={this.updateTodo}\n          onChange={this.search}\n          searchParameter={this.state.searchParameter}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}