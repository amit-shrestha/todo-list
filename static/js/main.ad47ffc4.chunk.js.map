{"version":3,"sources":["components/Input.js","components/Tool.js","components/TodoList.js","components/Button.js","components/Search.js","components/TodoListWrapper.js","components/Constants.js","components/App.js","serviceWorker.js","index.js"],"names":["Input","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","props","edit","setState","value","target","temp","handleSubmit","preventDefault","onEdit","index","state","onAdd","_this2","react_default","a","createElement","onSubmit","className","type","placeholder","onChange","React","Component","Tool","onClick","TodoList","todoList","option","completeTask","deleteTodo","updateTodo","searchParameter","getList","filter","todo","isCompleted","includes","length","map","item","key","isEditing","components_Input","components_Tool","Button","activeOption","Search","TodoListWrapper","addTodo","completeTodo","components_Button","components_Search","components_TodoList","ALL","App","task","isTaskValid","todos","concat","toConsumableArray","tasks","objectSpread","changeOption","tasksToDelete","itemIndex","enableEdit","some","letter","search","Constants","components_TodoListWrapper","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ad47ffc4.chunk.js","sourcesContent":["import React from 'react';\nimport Proptypes from 'prop-types';\n\n/**\n *\n *\n * @class Input\n * @extends {React.Component}\n */\nclass Input extends React.Component {\n  /**\n   *\n   * @memberof Input\n   */\n  constructor() {\n    super();\n    this.state = {\n      value: '',\n      temp: ''\n    };\n  }\n\n  /**\n   *\n   *\n   * @memberof Input\n   * @param {*} event\n   */\n  handleChange = event => {\n    this.props.edit\n      ? this.setState({ value: event.target.value })\n      : this.setState({ temp: event.target.value });\n  };\n\n  /**\n   *\n   *\n   * @memberof Input\n   * @param {*} event\n   */\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.edit\n      ? this.props.onEdit(this.props.index, this.state.value)\n      : this.props.onAdd(this.state.temp);\n    this.setState({ temp: '', value: '' });\n  };\n\n  /**\n   *\n   *\n   * @memberof Input\n   */\n  componentDidMount() {\n    this.setState({ value: this.props.value });\n  }\n  /**\n   *\n   *\n   * @returns\n   * @memberof Input\n   */\n  render() {\n    return this.props.edit ? (\n      <form onSubmit={event => this.handleSubmit(event)} className=\"edit-form\">\n        <input\n          type=\"text\"\n          placeholder=\"\"\n          value={this.state.value}\n          onChange={event => this.handleChange(event)}\n        />\n      </form>\n    ) : (\n      <form onSubmit={event => this.handleSubmit(event)} className=\"input-form\">\n        <input\n          type=\"text\"\n          placeholder=\"Add new task\"\n          value={this.state.temp}\n          onChange={event => this.handleChange(event)}\n        />\n      </form>\n    );\n  }\n}\n\nInput.propTypes = {\n  edit: Proptypes.bool,\n  onEdit: Proptypes.func,\n  index: Proptypes.number,\n  value: Proptypes.string,\n  onAdd: Proptypes.func\n};\n\nexport default Input;\n","import React from 'react';\nimport Proptypes from 'prop-types';\n/**\n *\n * @param {*} props\n */\nconst Tool = props => {\n  const { value, onClick } = props;\n\n  /**\n   *\n   */\n  const handleClick = () => onClick();\n\n  return (\n    <button className={value} onClick={handleClick}>\n      {value}\n    </button>\n  );\n};\n\nTool.propTypes = {\n  value: Proptypes.string,\n  onClick: Proptypes.func\n};\n\nexport default Tool;\n","import React from 'react';\nimport Proptypes from 'prop-types';\n\nimport Tool from './Tool';\nimport Input from './Input';\n\n/**\n *\n * @param {*} props\n */\nconst TodoList = props => {\n  const {\n    todoList,\n    option,\n    completeTask,\n    deleteTodo,\n    onEdit,\n    updateTodo,\n    searchParameter\n  } = props;\n\n  /**\n   *\n   */\n  const getList = () => {\n    if (option === 'Remaining') {\n      return todoList.filter(\n        todo => !todo.isCompleted && todo.todo.includes(searchParameter)\n      );\n    } else if (option === 'Completed') {\n      return todoList.filter(\n        todo => todo.isCompleted && todo.todo.includes(searchParameter)\n      );\n    } else {\n      return todoList.filter(todo => todo.todo.includes(searchParameter));\n    }\n  };\n\n  return getList().length !== 0 ? (\n    <ul>\n      {getList().map((item, index) => (\n        <li className=\"clearfix\" key={index}>\n          {item.isEditing ? (\n            <Input\n              onEdit={updateTodo}\n              edit={true}\n              index={index}\n              value={item.todo}\n            />\n          ) : (\n            <div\n              className={item.isCompleted ? 'task-list complete' : 'task-list'}\n              onClick={() => completeTask(index)}\n            >\n              {item.todo}\n            </div>\n          )}\n          <div className=\"menu\">\n            <Tool value=\"Edit\" onClick={() => onEdit(index)} />\n            <Tool value=\"Delete\" onClick={() => deleteTodo(index)} />\n          </div>\n        </li>\n      ))}\n    </ul>\n  ) : (\n    <div className=\"no-results\">No Results Found</div>\n  );\n};\n\nTodoList.propTypes = {\n  todoList: Proptypes.array,\n  option: Proptypes.string,\n  completeTask: Proptypes.func,\n  deleteTodo: Proptypes.func,\n  onEdit: Proptypes.func,\n  updateTodo: Proptypes.func,\n  searchParameter: Proptypes.string\n};\n\nexport default TodoList;\n","import React from 'react';\nimport Proptypes from 'prop-types';\n/**\n *\n * @param {*} props\n */\nconst Button = props => {\n  const { onClick, value, activeOption } = props;\n\n  /**\n   *\n   */\n  const handleClick = () => onClick(value);\n\n  return (\n    <button\n      className={activeOption === value ? 'active' : value}\n      onClick={handleClick}\n    >\n      {value}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  onClick: Proptypes.func,\n  value: Proptypes.string,\n  activeOption: Proptypes.bool\n};\n\nexport default Button;\n","import React from 'react';\nimport Proptypes from 'prop-types';\n\n/**\n *\n * @param {*} props\n */\nconst Search = props => {\n  const { onChange } = props;\n\n  /**\n   *\n   * @param {*} event\n   */\n  const handleSubmit = event => {\n    event.preventDefault();\n  };\n\n  /**\n   *\n   * @param {*} event\n   */\n  const handleChange = event => {\n    onChange(event.target.value);\n  };\n\n  return (\n    <form onSubmit={event => handleSubmit(event)} className=\"search-form\">\n      <input\n        type=\"text\"\n        placeholder=\"Search\"\n        onChange={event => handleChange(event)}\n      />\n    </form>\n  );\n};\n\nSearch.propTypes = {\n  onChange: Proptypes.func\n};\n\nexport default Search;\n","import React from 'react';\nimport Proptypes from 'prop-types';\n\nimport Input from './Input';\nimport TodoList from './TodoList';\nimport Button from './Button';\nimport Search from './Search';\n\n/**\n *\n * @param {*} props\n */\nconst TodoListWrapper = props => {\n  const {\n    onClick,\n    activeOption,\n    addTodo,\n    edit,\n    todoList,\n    completeTodo,\n    option,\n    deleteTodo,\n    onEdit,\n    updateTodo,\n    onChange,\n    searchParameter\n  } = props;\n\n  return (\n    <div className=\"container\">\n      <h1>TO-DO LIST</h1>\n      <Button value=\"All\" onClick={onClick} activeOption={activeOption} />\n      <Button value=\"Remaining\" onClick={onClick} activeOption={activeOption} />\n      <Button value=\"Completed\" onClick={onClick} activeOption={activeOption} />\n      <Input onAdd={addTodo} edit={edit} />\n      <Search onChange={onChange} />\n      <TodoList\n        todoList={todoList}\n        completeTask={completeTodo}\n        option={option}\n        deleteTodo={deleteTodo}\n        onEdit={onEdit}\n        updateTodo={updateTodo}\n        searchParameter={searchParameter}\n      />\n    </div>\n  );\n};\n\nTodoListWrapper.propTypes = {\n  onClick: Proptypes.func,\n  activeOption: Proptypes.bool,\n  addTodo: Proptypes.func,\n  edit: Proptypes.bool,\n  todoList: Proptypes.array,\n  completeTodo: Proptypes.func,\n  option: Proptypes.string,\n  deleteTodo: Proptypes.func,\n  onEdit: Proptypes.func,\n  updateTodo: Proptypes.func,\n  onChange: Proptypes.func,\n  searchParameter: Proptypes.string\n};\n\nexport default TodoListWrapper;\n","export const ALL = 'All';\n","import React from 'react';\n\nimport '../assets/css';\nimport TodoListWrapper from './TodoListWrapper';\nimport * as Constants from './Constants';\n/**\n *\n *\n * @class App\n * @augments {React.Component}\n *\n */\nclass App extends React.Component {\n  /**\n   * @memberof App\n   */\n  constructor() {\n    super();\n    this.state = {\n      todos: [],\n      searchParameter: '',\n      option: Constants.ALL\n    };\n  }\n\n  /**\n   * @memberof Input\n   * @param {string} task\n   */\n  addTodo = task => {\n    if (this.isTaskValid(task)) {\n      this.setState({\n        todos: [\n          {\n            todo: task,\n            isCompleted: false,\n            isEditing: false\n          },\n          ...this.state.todos\n        ]\n      });\n    }\n  };\n\n  /**\n   * @memberof Input\n   * @param {number} index\n   */\n  completeTodo = index => {\n    const tasks = this.state.todos.map(item => {\n      return { ...item };\n    });\n\n    tasks[index].isCompleted = !this.state.todos[index].isCompleted;\n    this.setState({ todos: tasks });\n  };\n\n  /**\n   * @memberof Input\n   * @param {string} option\n   */\n  changeOption = option => {\n    this.setState({ option: option });\n  };\n\n  /**\n   * @memberof Input\n   * @param {number} index\n   */\n  deleteTodo = index => {\n    const tasksToDelete = this.state.todos.filter(\n      (item, itemIndex) => itemIndex !== index\n    );\n\n    this.setState({ todos: tasksToDelete });\n  };\n\n  /**\n   * @memberof Input\n   * @param {number} index\n   */\n  enableEdit = index => {\n    const tasks = this.state.todos.map(item => {\n      return { ...item };\n    });\n\n    tasks[index].isEditing = !this.state.todos[index].isEditing;\n    this.setState({ todos: tasks });\n  };\n  /**\n   * @memberof Input\n   * @param {number} index\n   * @param {string} task\n   */\n  updateTodo = (index, task) => {\n    const tasks = this.state.todos.map(item => {\n      return { ...item };\n    });\n\n    tasks[index].isEditing = !this.state.todos[index].isEditing;\n    if (this.isTaskValid(task)) {\n      tasks[index].todo = task;\n    }\n    this.setState({ todos: tasks });\n  };\n\n  /**\n   * @memberof Input\n   * @param {string} task\n   */\n  isTaskValid = task => {\n    if (task && task !== null && [...task].some(letter => letter !== ' ')) {\n      return true;\n    }\n\n    return false;\n  };\n\n  /**\n   * @memberof Input\n   * @param {string} value\n   */\n  search = value => {\n    this.setState({ searchParameter: value });\n  };\n\n  /**\n   *\n   *\n   * @returns\n   * @memberof App\n   */\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <TodoListWrapper\n          onClick={this.changeOption}\n          activeOption={this.state.option}\n          addTodo={this.addTodo}\n          edit={false}\n          todoList={this.state.todos}\n          completeTodo={this.completeTodo}\n          option={this.state.option}\n          deleteTodo={this.deleteTodo}\n          onEdit={this.enableEdit}\n          updateTodo={this.updateTodo}\n          onChange={this.search}\n          searchParameter={this.state.searchParameter}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}